-- ============================================
-- ESKÄ° POLÄ°TÄ°KALARI TEMÄ°ZLE
-- ============================================
-- Ã‡ift politikalarÄ± silmek iÃ§in - sadece eski olanlarÄ± sil
-- Yeni oluÅŸturduÄŸumuz politikalar kalacak

-- ============================================
-- Ã‡IFT POLÄ°TÄ°KALARI SÄ°L
-- ============================================

-- ORDERS - Eski politikalarÄ± sil
DROP POLICY IF EXISTS "Anyone can place orders" ON public.orders;
-- "Herkes sipariÅŸ oluÅŸturabilir" kalacak

-- CATEGORIES - Eski politikayÄ± sil (yeni zaten var)
-- "Herkes kategorileri gÃ¶rebilir" ve "Adminler kategorileri yÃ¶netebilir" kalacak

-- COUPONS - Eski politikayÄ± sil (yeni zaten var)
-- "Herkes aktif kuponlarÄ± gÃ¶rebilir" ve "Adminler kuponlarÄ± yÃ¶netebilir" kalacak

-- PRODUCT_REVIEWS - Eski politikalarÄ± sil
DROP POLICY IF EXISTS "Anyone can view reviews" ON public.product_reviews;
-- "Herkes Ã¼rÃ¼n yorumlarÄ±nÄ± gÃ¶rebilir" kalacak

-- REVIEWS - Eski politikalarÄ± sil
DROP POLICY IF EXISTS "Anyone can view reviews" ON public.reviews;
-- "Herkes yorumlarÄ± gÃ¶rebilir" kalacak

-- REVIEW_HELPFUL_VOTES - Eski politikalarÄ± sil
DROP POLICY IF EXISTS "Anyone can view helpful votes" ON public.review_helpful_votes;
-- "Herkes oylarÄ± gÃ¶rebilir" kalacak

-- ============================================
-- GÃœVENLÄ°K: has_role fonksiyonunu dÃ¼zelt
-- ============================================

-- has_role fonksiyonunu gÃ¼venli search_path ile yeniden oluÅŸtur
CREATE OR REPLACE FUNCTION public.has_role(_user_id UUID, _role app_role)
RETURNS BOOLEAN
LANGUAGE SQL
STABLE
SECURITY DEFINER
SET search_path = public, pg_temp  -- GÃ¼venli search_path
AS $$
  SELECT EXISTS (
    SELECT 1
    FROM public.user_roles
    WHERE user_id = _user_id
      AND role = _role
  )
$$;

-- ============================================
-- KONTROL
-- ============================================

-- Ã‡ift politikalarÄ± kontrol et
SELECT 
    schemaname,
    tablename,
    COUNT(*) as policy_count,
    STRING_AGG(policyname, ', ') as policies
FROM pg_policies
WHERE schemaname = 'public'
AND tablename IN ('orders', 'categories', 'coupons', 'product_reviews', 'products', 'review_helpful_votes', 'reviews')
GROUP BY schemaname, tablename, cmd, roles
HAVING COUNT(*) > 1
ORDER BY tablename;

-- BaÅŸarÄ± mesajÄ±
SELECT 'âœ… ESKÄ° POLÄ°TÄ°KALAR TEMÄ°ZLENDÄ°!' as durum;
SELECT 'ğŸ”’ has_role fonksiyonu gÃ¼venli hale getirildi' as guvenlik;
SELECT 'ğŸ“Š Supabase Linter tekrar kontrol edilebilir' as sonuc;
